plugins {
    id 'fabric-loom'
}

version = '1.0.0'
group = 'io.layux.bingo.fabric'
description = 'Example Fabric mod'

ext {
    mod_id = 'fabric-example'
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings_version:v2"
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_language_kotlin_version"
}

sourceSets {
    shared {
        java {
            srcDirs = ['src/shared/java']
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
        resources {
            srcDirs = ['src/shared/resources']
        }
        kotlin {
            srcDirs = ['src/shared/kotlin']
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }
    client {
        java {
            srcDirs = ['src/client/java']
            compileClasspath += sourceSets.main.output + sourceSets.shared.output
            runtimeClasspath += sourceSets.main.output + sourceSets.shared.output
        }
        resources {
            srcDirs = ['src/client/resources']
        }
        kotlin {
            srcDirs = ['src/client/kotlin']
            compileClasspath += sourceSets.main.output + sourceSets.shared.output
            runtimeClasspath += sourceSets.main.output + sourceSets.shared.output
        }
    }
    server {
        java {
            srcDirs = ['src/server/java']
            compileClasspath += sourceSets.main.output + sourceSets.shared.output
            runtimeClasspath += sourceSets.main.output + sourceSets.shared.output
        }
        resources {
            srcDirs = ['src/server/resources']
        }
        kotlin {
            srcDirs = ['src/server/kotlin']
            compileClasspath += sourceSets.main.output + sourceSets.shared.output
            runtimeClasspath += sourceSets.main.output + sourceSets.shared.output
        }
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "fabric-example" {
            sourceSet sourceSets.client
            sourceSet sourceSets.server
            sourceSet sourceSets.shared
        }
    }
}

processResources {
    filesMatching('fabric.mod.json') {
        expand([
                description: project.description,
                version: project.version,
                fabricloader: "$fabric_loader_version",
                fabric_api: "$fabric_version",
                fabric_language_kotlin: "$fabric_language_kotlin_version",
                minecraft: "$minecraft_version",
                java: "$java_version"
        ])
    }
}